{"./":{"url":"./","title":"简介","keywords":"","body":"How to use gitbook 1. Install node.js Install node.js from official website. Link: https://nodejs.org/en/ There are two version of node.js there, just install stable version is enough. When finished installation. check with node -v, to see if install sucessfully. $ node -v V6.*.* 2. Install gitbook sudo npm install gitbook-cli -g Remember to add sudo and -g. -g means install globally. Check with gitbook -V to see if install sucessfully. $ gitbook -V CLI version: 2.3.2 GitBook version: 3.2.3 Gitbook command using gitbook build to build the HTML $ gitbook build info: 14 plugins are installed info: 13 explicitly listed info: loading plugin \"github\"... OK info: loading plugin \"edit-link\"... OK info: loading plugin \"donate\"... OK info: loading plugin \"sitemap\"... OK info: loading plugin \"splitter\"... OK info: loading plugin \"sharing-plus\"... OK info: loading plugin \"search\"... OK info: loading plugin \"search-pro\"... OK info: loading plugin \"highlight\"... OK info: loading plugin \"lunr\"... OK info: loading plugin \"fontsettings\"... OK info: loading plugin \"theme-default\"... OK info: found 6 pages info: found 5 asset files info: >> generation finished with success in 1.0s ! There will be _book folder on the root folder. or preview the book using gitbook serve $ gitbook serve Live reload server started on port: 35729 Press CTRL+C to quit ... info: 14 plugins are installed info: loading plugin \"github\"... OK info: loading plugin \"edit-link\"... OK info: loading plugin \"donate\"... OK info: loading plugin \"sitemap\"... OK info: loading plugin \"splitter\"... OK info: loading plugin \"sharing-plus\"... OK info: loading plugin \"search\"... OK info: loading plugin \"search-pro\"... OK info: loading plugin \"livereload\"... OK info: loading plugin \"highlight\"... OK info: loading plugin \"lunr\"... OK info: loading plugin \"fontsettings\"... OK info: loading plugin \"theme-default\"... OK info: found 6 pages info: found 5 asset files info: >> generation finished with success in 0.9s ! Starting server ... Serving book on http://localhost:4000 You can just using the link http://localhost:4000 to preview on browser. 4. Install calibre plugin Calibre link: https://calibre-ebook.com/download sudo ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert /usr/local/bin //官方的文档里是如下命令：会引起权限和命令无效等问题 sudo ln -s ~/Applications/calibre.app/Contents/MacOS/ebook-convert /usr/bin Generate different format # Generate a PDF file $ gitbook pdf ./ ./mybook.pdf # Generate an ePub file $ gitbook epub ./ ./mybook.epub # Generate a Mobi file $ gitbook mobi ./ ./mybook.mobi "},"foreword/introduction.html":{"url":"foreword/introduction.html","title":"介绍","keywords":"","body":"介绍 这本书的结构 第一部分：基础部分 模式(patterns) 执行(practices) 设计模式 (design patterns): 可复制、可复用 具体的和功能性的：按钮(button) 和 文本框(text fields) 描述性：图像样式(icongraphy styles)、颜色(colors)、typography(版式) 第二部分：过程 从实用的步骤和技术出发来建立和维护设计系统。 准备工作 审计页面清单 建立样式库 创建、文档化、升级、维护设计样式 术语 模式(pattern) 或者 设计模式(design pattern) 模式(pattern)：可重复，可复用的界面部分（如按钮、文本框、图像样式、颜色、版式、用户流程、交互行为），这些可以用来解决特定的设计问题，满足用户需求，或者引起用户的情绪反应的部分。 功能模式(function patterns)：行为相关 知觉模式(perceptual patterns)：品牌或者美学相关 功能模式(function patterns) 或者 模块(modules) 界面有形的模块，像按钮(button)，顶栏(header)，输入框(form element)、菜单(menu) 知觉模式(perceptual patterns) 或者 样式(styles) 更描述性的设计模式，就像图形样式，颜色，版式。用在创造审美或者强化和产品的情绪连接。 模式语言(pattern language) 或者 设计语言(design language) 包含了功能模式和知觉模式。 设计系统(design system) 或者 系统(system) 在设计界没有明确的定义，在本书中，定义式一些有关联性的模式(connected patterns) 和 共享方式(shared practices)，有条理的为产品的最终目的服务。 模式库(pattern library) 或者 样式指南(style guide) 模式库用来获取，收集和分享设计模式和使用指南的工具。 设计系统洞悉 AIRBNB : https://airbnb.design/the-way-we-build/ ATLASSIAN: https://atlassian.design/ ETLASSIAN: https://style.eurostar.com/ SIPGATE: https://design.sipgateteam.de/ TED: https://www.ted.com/swatch "},"foundations/":{"url":"foundations/","title":"基础","keywords":"","body":"文字好小哦 zhendafjl asdf "},"foundations/chapter1.html":{"url":"foundations/chapter1.html","title":"第一章节: 设计系统","keywords":"","body":"第一章节 - 设计系统 设计系统包含：内在关联模块(interconnected patterns) 和 共享方式(shared practices) 模块：组成界面的可重复性元素，包含 用户流程、交互、按钮、文本框、图标、颜色、版式、微复制品。 共享方式：我们如何创建、捕捉、分享和使用这些模块，特别是在和团队工作的时候。 Thomson 的主要目的是为了处理数据，效能，快速扫描和多任务操作。 FutureLearn 的主要目的是为了仔细阅读，非正式学习，和其他志同道合的人产生联系。 产品的 目的 决定着它所选用的模块。 Thomson 的版面看起来以面板和小部件为主，为了让用户可以多任务操作。设计看起来很稠密，屏幕上展示了许多的信息。很小的间距，紧凑的控制，弹性的布局，排版的选择，就像使用浓缩字体和相对较小的标题，这些都能产生稠密的效果。 FutureLearn 的版面看起来更广阔。每个页面通常专注在一个任务上，就如同读一篇文章一样、参与一场讨论或是完成一个互动练习。主要是单栏的布局；高对比的排版，大的标题文字，宽大的控制，和巨大的留白空间。 功能模块(functional patterns) 由产品所属的领域来决定。例如，市场趋势分析软件，就习以为常的有任务栏、数据字段、表格、数据可视化的工具。对于在线的学习平台则有，文章、视频、讨论区块、进度条、互动活动等。 产品的精神(或者说品牌) 称作 知觉模式(perceptual patterns)。例如，腔调、版式和颜色、图像风格、间距和版式、具体的形状、互动、动画和声音。 设计模式(design patterns) 大部分的设计模式都是已经建立的和熟悉的。它们运用人的心理模型，让设计可以更直观的被理解。一系列内在连接的模式组成了产品界面的设计语言。 Visual loudness guide 具体来说，我们主要看两种设计模式：功能和知觉。功能模式表现为页面的具体模块，就像按钮，顶栏，输入框，菜单。知觉模式是描述性风格，可以直观的传达和表达产品的个性，就像颜色，排版，图像风格，形状，动画。 从前端的视角来看的话，模块总是在 HTML 中，知觉模式在 CSS 特性中。 一个设计系统包含了许多的模式：用户流程(包含错误和成功的信息样式的表单)，领域型设计模式(就像教育平台，电商平台)，有说服力的用户体验模式。 共享语言(shared language) 共享语言可以跟有利于团队的合作。有了共享语言意味着我们有同样的方法来为界面元素命名，而且这些命名可以延续至设计文件和前端的框架。 理想上，参与产品大件的每个人都应该知道这是什么元素：它的名字和用途，为什么被设计称这样，它可以怎么或者何时来使用。 MailChimp's pattern library 是比较早期并且有影响力的在线模式库的例子。 模式库的局限 模式库主要是为了让设计更一致。但是它不能让坏的设计变成好的设计。 有效的设计系统的组成 设计系统的各个部分如何组合来达成产品的目的，可以用来衡量该设计系统是否有有效。 分享目的 在高效的系统中，我们可以看到子系统连接并朝向共同的目标：设计方法在前端架构中呈现；设计模式遵循指导原则；模式语言在设计、代码和模式库中一致的运用。我们看到这些系统的运作方式的和谐：它们的工作流程更有效率；它们创造的用户体验更有意义和连贯性。 定义问题 如何来减少间隙，并且让设计系统更高效呢？理解产品是什么，它如何工作。我们通过模式语言如何参与新产品的过程，下面是例子。 例子：一个十分钟的食谱网站 想象一下我们要建造一个网站，给那些热爱健康食物，但是不想花太多时间煮的人。我们如何开始呢？让我们先做一些假定。我们明白要做的领域是烹饪，而且我们已经为此做了足够多的调研。所以我们所要做的不是找出体验会是怎么样，而是看我们如何建立设计系统思考。 目的和价值 我们首先需要做的是了解我们的用户是谁，他们的目标，需求和动机是什么。我们假定他们是忙碌的职业人事，他们的目标是得到美味的，健康的一餐，但是不会泰国麻烦和费时。我们有许多种方法可以帮组他们达到目标：帮他们联系厨师，快递食物到他们家，建造一个交谈的软件。但是我们要做得是一个只要花十分钟的食谱网站。 如果我们用一句话来表达我们目的的话，它会是：激励和授权用户去烹饪美味健康的食物在十分钟内。这是这个产品的核心部分，它应该时刻引导着设计和开发决定。团队应该时刻记住这个目的并且深信它。 另外一个重要的元素是找到我们试图通过网站来描绘的价值和精神。对于我们这个可以简单是健康的食物和所使用的器具和食物的原料。对于其他网站而言这个可能是高级美食和精湛的烹饪技巧。 设计原则 为了确保我们产品的目的被清楚的传达到我们需要做的任何事情上面，我们需要确立一些基本的原则和价值观。他们可能会被非正式的讨论或者被写成了一个宣言 —— 但是最重要的是参与的成员赞同这些原则和价值观。 例如，每一个在十分钟烹饪的菜谱项目的成员赞同时间的宝贵。他们积极的被菜谱上限制的时间影响着，最终他们都女里让网站的交互简洁、快速和流畅。这个原则不仅仅表现在设计模式上面，还包括网站的外观上，腔调上，甚至是团队运转上。 这些原则可能不必要很正式的写下来。但是每个人都同意并且时刻意识到什么是每个人最终想要达到的，并且始终同步。它也能帮助做一些必要决定：哪一写是最先需要被建立的特性，使用哪一种方法，确定交互流程，按钮应该看起来怎样，字体应该如何选择。 行为和功能模式 我们会制定一些我们希望鼓励或者启发用户的关键行为，来帮助他们达成目标。 我们希望人们总是选择健康的家庭烹饪食物而不是快餐或者微波速食。这意味着我们的食物需要看起来很美味和健康，并且比微波食物更为诱人。好的简介的美食照片可以帮助我们达成。 我们希望人们可以在十分钟内可以达成良好的效果。这意味着我们需要在几步之内展示我们的诀窍。这些步骤应该简短，清晰和专注。也许我们每一步有一个计时器，来确保我们在十分钟内可以完成。 我们鼓励人们更主动，并且相信自己可以做出很好的。从你拥有的东西开始，而不是你需要哪一写东西—— 不需要专门去买昂贵的原料。在 UI 方面，可以提供一些易得的材料缩略图和标签。 最终，我们希望鼓励人们更富有创造力和主动，享受过程。展示那一些材料是非必需的，或者哪一写可以被替代。展示一些意想不到的组合也许也是值得尝试的方法。 当然，这些设计细节会跟随这我们网站的工作而改变。这些行为将成为网站的主要功能模块和交互行为：原料缩略图、配方卡片、步骤序列、计时器。 审美和知觉模式 在同样的时间，我们需要想办法如何让我们的十分钟的烹饪网站被人看到。我们是简单而踏实的还是复杂而迷人的？我们是严肃的还是娱乐的？大胆还是柔和的？功利的还是感性的？通过界面，什么样子的审美可以表现我们的个性和精神？我们开始思考品牌了。 我们对于健康食物充满激情，所以我们需要它贯彻整个网站。也许它是有机的，温暖的，有益健康的感觉。我们也相信烹饪不需要太多的计划和准备；它可以是自然的而且有趣的，你可以在这十分钟时间里尝试和富有创造力。 在这时候我们可以放一些 情绪板(mood boards)，并开始尝试视觉部分，知道感觉起来是对的。一旦我们达到了这个目标，我们就可以定义核心的视觉元素，就像 版式(typography)，色盘(color palette)，语调(tone of voice)，和任何与品牌有关的特性；例如，插画(illustration)，图片风格(image styles)，特殊的形状(specific shapes)，独特的交互(unique interactions)等, 那些可以最好的呈现我们本质的服务和内容。 假如，我们用的是温暖，自然的色盘，手绘的图标，可读性强的字体，有质感的健康食物的照片，和一些简单的界面元素。这些样式将是我们的 知觉模式(perceptual patterns)。 共享语言 除了这个过程之外，我们将通过选择以某种方式引用概念来作出语言的决策。什么是“食谱”呢？什么是“步骤”呢？什么是“简单愉悦的交互”呢？我们选用什么语言将会影响到团队的思考方式。间接的，它们也将影响到设计。 在一开始，模式和语言可以不拘礼节的共享。但是跟随这团队和产品的扩大，语言也会不断的增长。最终，我们需要更有调理的方式来捕捉，分享和组织我们的设计词汇。 现在我们已经使用一个虚构的站点来概述设计过程，我们可以通过使用来自真实世界的数字产品和公司的示例来了解系统如何发展。 "},"foundations/chapter2.html":{"url":"foundations/chapter2.html","title":"第二章节: 设计原则","keywords":"","body":"第二章节：设计原则 实用的设计原则是所有运作良好的设计系统的基石。在这个章节我们将讨论有效的设计原则的质量，并研究一些定义它们的方法。 前面我们谈到了从目的和精神开始产品的界面设计的重要性。明确目的是至关重要的，因为所有的决定都应该由它来塑造，即使是间接的。我们如何确保产品的目的通过设计得以实现呢？通过建立一些基础的价值观和原则。 在一些公司的早期，尝试阐明共享指南 (shared guidelines) 可能很难。设计原则是不可以测量和量化的东西，定义他们需要好几代的迭代。关于原则究竟是什么可能也存在一些混淆。根据公司的不同，他们有一些关注于品牌，有一些关注于团队文化，另一些则关注于设计过程。Pinterest 的原则更专注于品牌（\"Lucid,\" \"Animated,\" \"Unbreakable\"），然而英国政府数字部门 (GDS) 他们更着重于团队运转 （\"Do less,\" \"Iterate. Then iterate again\"）。 有时候，对于一些特定的项目，原则会在有一些有限的时间内使用。设计师 Dan Mall 喜欢在每个项目一开始的时候就写一个“设计宣言”，以确保明确表达创意方向和目标。在其他情况下，原则更为持久，它甚至发展为公司精神的一部分。就像 Jack Daniel 提出的 “自信”、“独立”、“诚实” 这些原则，这些价值在上个世纪都未改变。 较大的公司，可能会为用户体验、品牌、设计系统定制单独的原则。此外，在公司里里的每个团队可能也有他们单独的原则。虽然这个适用于某一些公司，但是多套设计指南可能也会导致设计系统碎片化。在 Atlassian，一家企业软件公司，营销和产品部门的设计原则是完全不同的。随着时间的推移，团队将他们拉的更为紧密，他们现在正在制定一套统一的原则，目标是采用共同的理念来弥合营销，产品和支持等部分之间的差距。 这是一个系统。原则的目的是将所有的点连在一起。 Jurgen Spangl, 设计主管，Atlassian 除了为不同的团队和部门制定不同的原则，Atlassian 旨在有一些关键的价值观——例如 大胆地 乐观地 和 简单实用地 —— 这些贯穿于用户旅程的所有接触点中。虽然这些价值观在所有的用户旅程中是相同的，但是他们在不同的阶段强度也不一样。网站的销售和营销部门更为 “大胆”地去展示产品和帮助用户了解他们的价值观。但是当你接触产品本身和支持部门，体验就变为更关注用户的完成工作，并确保人们能够尽可能的有效率。因此，大胆度降低，实用性升高。就如 Atlassian 的设计主管 Kevin Coffey 所说：没有人想要一个大胆的支持页面。 有效设计原则的品质 达到设计原则的方法对于每个公司都是不一样的，它们可能有多种形式。原则可以是总体的，也可以是细化的，暂时的或者持久的。重要的是它团队中统一设计思维和分配创意方向的效率。在这本书的上下文中，设计原则是 共享指南指出了对于团队来说什么是好的设计，以及如何实现它的建议。 换言之，在您的组织和产品中构成良好设计的商定标准。 无论采用何种方法， 有效的设计原则通常都有这些特性。 1. 它们真实不虚 我相信你对这些原则很熟悉：“简洁的、有用的、令人愉悦的”。我们经常听到它们，它们无处不在。毫无疑问，良好的设计都遵循一定的共同原则（例如，Dieter Rams 的良好设计的十条诫命就是很好的例子）。但是这些品质应该是给定的–它们应该用设计来完成–而不像其他方面，例如可访问性和性能。我还没有看到过一个数字产品，它的原则是“复杂”，“无用”，和“使用起来很痛苦”。 你的产品有用的和有趣的，它并不会对你的设计决定提供很大的帮助和指导。因为这些这些品质可以通过多种的方式来解释。能够让他们有用得是，让团队指导这些词，确切想表达的内容。创新需要什么？什么时候设计被认为有用？你怎么指导它真的令人愉悦？良好的设计原则定义了可以用不同方式解释的品质，并将其置于特定产品的背景下。 让我们以 TED 作为例子。TED 的一个设计原则是 “永恒而不是前沿。” 永恒这个词指的不是 TED 的界面，而是它们整个品牌想要通过设计而达成的目标。这也就意味着它们不会采用新的技术或者引入新的设计元素以追随潮流。首先它必须为一个目的服务，也就是它必须为尽可能多的用户服务。对于 TED 来说，永恒不仅仅意味着简洁，并且时刻意识到样式特点不会无经证实就呈现给用户。例如，团队不会引入视差效果，就算它在现在非常的潮流，除非它能解决一些真正的设计问题。 2. 它们切合实际并且是可行的 原则应该就如何在特定产品的背景下解决设计问题提供切实的指导。对比这两个版本的 FutureLearn 的原则： 简约一点。让它简约到几乎注意不到！我们应该始终努力消除平台上造成的摩擦部分，创造一种允许用户真正获取内容的体验。如果我们平台易于理解，用户就会更多的使用它。 这个声明很完美–没有人可以反驳一个简单易用的界面的必要性。但是，这个声明不够清晰，它没有告诉我们什么才是简约，应该如何才能达到简约。对比这个版本： 没有冗余的部分。每一个设计元素，从最大的到最小的，必须要有目的性，并且要为更大的部分服务。如果你不能解释清楚那个元素的作用，那么它也许就不应该在那儿。 在实际中，“是否足够简约？” 比起 “它是否包含了必要的部分？”。 后者更容易在界面的每个元素中进行检验。 为了让原则表达的更切合实际，尝试着让它们更具体并且能够提供一些行动建议，而不是仅仅听起来很棒。想象一下你要为加入你们团队的一个新人分享五个设计你们产品的要点。如果你只告诉他们“我们想要令人愉快的设计。让设计变得让人愉快！”，这样恐怕不能够帮助他们完成工作。你需要定义清楚什么是“令人愉快的”，并且分享一些实际的“令人愉快的”案例给他们，让它在你们的界面中它的定义。 让我们来看一下下面的一些设计原则的案例，以及如何让它们变得更实用。 模糊的：“让它更清晰”可行的：“只有呈现一个优先级。你希望用户首先看到什么和做什么” 模糊的：“让它更简单”可行的：“使它牢不可破。就像小朋友的玩具，确保它是为了探索而设计，不会发生意想不到的点击。” 模糊的：“让它更有用” 可行的：“从需求开始。如果你不知道用户的需要是什么，你将无法构建正确的东西。做研究，分析数据，跟用户交谈。不要去自行假设。” 即使是最好措辞的原则也可以用多种方式来解释。没有什么比让这些设计原则在实际生活中应用和找到对应的例子。找到界面特定的部分，并且是清晰的应用了原则。你可以指出那一个部分清晰的表明了“只呈现一个优先级”。你可以示范一下哪一些部分真正地“牢不可破”，尽管它有丰富的互动。 3. 它们表达了一个观点 设计是由我们决定的。这个界面是该更具视觉活力还是更实用？更有趣还是更严肃呢？我们是否可以在产品的易用性和灵活性之间做取舍？为了达成某一个目标，我们经常要拒绝某一些部分。好的设计原则可以帮忙理清设计优先级和它们之间的平衡，即使存在相互矛盾的因素需要考虑。 让我们以 Salesforce Lighting 设计系统 的原则作为参考：“清晰、有效率、一致、美”。这个顺序也强调了优先级。美不应该在有效率和一致性之上，清晰始终是位于第一者。以这种方式对原则进行排名可以向团队传达在制定设计决策的时候应该优先考虑的事项。 设计原则可以有效的帮助认识冲突，并且找到其中的平衡点。Medium 早期的设计原则是“方向优先于选择 (Direction over Choice)” 当团队在设计文字编辑器的时候经常会提到这个原则。他们故意交换各种格式选项，以指导人们更专注的写作。 Medium 的编辑器只提供了很少的设置选项，清晰的表明了它们的原则 “方向高于选择” 好的设计原则不需要展现的面面俱到。它们为设计师权衡轻重提供了有效的参考。Dan Mall 在“研究设计系统” 中强调了这个方法： “设计系统应该有以下的指导：权衡轻重、观点、向每个决定用设计系统来构建一些东西的人扩展思路。那些东西应该慢慢研磨，否则，我们都可以就使用 Material Design 来应付了事” Dan Mall 4. 它们是可靠并且值得铭记的 这儿有一个有趣的测试。尝试问你们公司的同事你们的设计原则是什么。如果没有人记得它们，意味着设计原则需要改进。如果要人们对它印象深刻，就要持续不断的使用它。它们应该在每天的对话当中被提及，包括在简报中和在设计批判中，呈现在易于被看到的地方。要保证时常被用到，它们必须真正的有用，且在以上条件中使用。 原则不用太多。人的记忆能力有限，如果每次需要记住多余4个东西的话，会很吃力。设计原则的最佳数量–如果你想让它们被持续使用–最好的话是3-5个。当我们为本书采访 TED, Atlassian, Airbnb 团队成员的时候，他们都可以即刻想起设计原则。没有人会需要看品牌手册来回忆起他们。他们问什么能记的如此清晰呢？他们的原则都很简单、可靠、有用–并且并不多。 更为重要的是，团队在每天的设计决策过程中都使用着他们。Airbnb 的四个设计原则 (\"Unified,\" \"Universal,\" \"Iconic,\" \"Conversational\") 深入的参与到他们的设计过程中： “当我们在设计新的元素的时候，我们需要确保这个元素满足了我们的原则。如果我们没有一套设计原则的话，就很难达成一致。我们要确保每个部分都符合我们的原则。“ – Roy Stanfield，主交互设计师，Airbnb Spotify 的原则采用字母的缩略词 TUNE (tone, usable, necessary, emotive) 来使得设计原则更加难忘。在评论和 QA 中，确认设计是否包含了 \"TUNE\" 已经成为 Spotify 设计过程的一部分。 为了让设计原则达到以上的质量，需要花费大量的时间、精力和团队工作。但是它值得为之付出，一套核心的设计原则是所有设计系统的中心。 定义你的设计原则 用五个句子传达你的设计方法并不容易。每个团队形成他们设计原则的方法并不相同：一些通过几轮的工作坊，一些通过 CEO 或者创意总监的直接传达。不管你用何种方式形成设计方法，下面的一些技巧记在心中可能对你有一些帮助。 从目的开始 设计原则必须支持产皮更大的目的，并有助于传达产品的精神。如果你不知道从何处开始，请了解公司的总体价值观和产品的愿景，然后尝试弄清楚设计原则如何为更大的目标服务。 TED 的网站的主要目的可以用一句话来概括：“尽可能广泛的传播想法”。就 TED 的精神和价值观而言，意味着接触越多的使用者越好，降低接触的门槛，使产品具有包容性和可访问性。这意味着优先考虑性能和可访问性而不是华丽的功能，清晰的传达信息而不是大胆的试验型设计。他们的“永恒的原则”包含了这一点。 找到合适的主题 如果你还在定义原则的阶段，一个有效的练习是去询几个团队成员（或者团队中的每一个人，若团队人数不多的话）并把它写下来。在他们看来，对于你们的产品什么才是好的设计？他们如何用五句话以一种实用且易于掌握的形式来向新同事展示。 让他们在产品界面中为每个原则找到切实存在的例子。 比较你团队的答案可以揭示你们在设计方法上面的统一程度。是否有很多共享的主题和重叠的部分？每个不同的部门是否有类似的原则？看到每个人不同的回答总是很有趣，特别是对比那些刚加入团队的那些人和陪伴产品成长的那些人之间的看法。这些看法可以成为进一步开展原则工作的起点，因为你可以确定共同的主题，并且就优先级达成了一致。 聚焦于正确的听众 结束模糊的的设计原则的方法是不知道他们是谁。你在为企业宣传册写作吗？为公司网站吗？职业网站吗？潜在的合作伙伴或者客户吗？尝试为你和你的同事写出设计原则，首要的是：设计师，开发者，内容生产者，市场专业人员，领域专家–那些直接参与在产品研发的人员。旨在就产品的优良设计达成非正式的协议，并提供实现产品的实用指南。 测试和使用你的原则 随着你的产品不断的发展，你的原则也是。他们将塑造设计语言，反过来也将塑造原则。他们可能开始变得清晰和专注，也可能随着时间的推移变得更加稀释并失去其真实性。为了确保你的设计原则持续不断的改进，他们需要不断的进行测试、评估、重新定义。这只能通过意识到它们并在每天的工作应用它们来实现。为了使你的原则成为关键设计的一部分，例如，你可以持续的测试他们是否对你的设计流程有帮助，没有的话就迭代它们。 从原则到模式 作为设计师，在我工作的挑战之一就是如何将更高层次的概念（如，设计原则和品牌价值）实现到具体的 UI 元素中。他们是如何体现在我们创造的设计模式中的？ 很多时候是关于模式的选择和执行。对于 Medium，在功能层级，一个功能良好的编辑器是需要的。它可以是任何形式的编辑器，具有任何的复杂度。但是出于所有可能性，Medium 选择了样式最为简单的，“方向多余选择” 对于 TED，信息的清晰性优先于美感的考量。试图将谈话提炼成单个句子可能很难，有时标题可能很长。把标题剪短看起来更容易，但是对于团队来说，谈话的信息必须始终优先。他们没有选择容易的解决方案，而是确保他们的设计模式中包含了可以容纳长标题。 TED.com 上面的横幅可以容纳足够长的符合他们设计原则的标题 从品牌的角度来看，还有一种优先顺序。例如，TED 团队选择不使用图像化的主页知道他们开发了新的压缩技术来尽可能的减少众多图像对性能的影响。 对于 Atlassian 团队，“乐观”的原则体现在“乐观的界面中”。在 JIRA，例如，有用户想要把卡片从“正在进行中” 移动到 “完成”，卡片可以立即移动，即使在背后需要有很多的检查和验证工作，也许可能会有很多差错。他们的目标旨在呈现“眨眨眼就行了”的原则，通过友好的文案，反馈信息，登陆信息和网站上面其他的信息。 设计模式是由产品是如何运作的核心理念决定的。想想如何通过 Slack 的公共频道体现“透明与合作”的精神；“捕捉生命中独特的瞬间”的想法如何转化为 Instagram 上面的照片流和互动；Trello 上面的卡片如何鼓励某种类型的工作流程。 模式的选择和执行，及其他们独特的组合受到产品的目的、精神、和设计原则的影响。你可以将设计原则视为创建模式的语法规则，并以具有内在意义的方式组合它们。同时，随着品牌和功能模式的发展变得更加精致，他们也塑造着设计原则。原则和模式不断完善和相互影响。 在接下来两个章节中，我们将会讨论设计模式更多的细节，并以实际的产品为例子。我们将可以看到设计模式如何出现，以及他们如何受到产品目的和产品精神、用户行为、品牌、商业需要、和一些其他因素的影响。 http://smashed.by/pinterestredesign http://smashed.by/govukprinciples” \"So…What Do I Make?\" by Dan Mall \"When It Comes To Whiskey, America Knows Jack\" by Avi Dan Google has well known broad-brush design principles such as “Focus on the user and all else will follow,” and a more specific set of principles for its material design language, such as “Motion provides meaning. Example adapted from Pinterest design principles in \"Redesigning Pinterest, block by block\" Example adapted from GDS design principles. This point was inspired by the excellent article \"A Matter of Principle\" by Julie Zhou. http://smashed.by/lightning \"Creating useful design principles\" by Dustin Senos http://smashed.by/researchingsystems For further reading on the limitations of human working memory see \"The Magical Mystery Four: How is Working Memory Capacity Limited, and Why?\" by Stanley Wood \"Design Doesn't Scale\" http://smashed.by/truelies "},"foundations/chapter3.html":{"url":"foundations/chapter3.html","title":"第三章节：设计模块","keywords":"","body":"第三章：功能模块 在这一章，我们将讨论功能模块的角色和为什么他们应该在设计流程的初期被定义。 功能模块式是界面的基石。它们的目的是为了启动和鼓励用户行为。 在十分钟烹饪网站，有一些行为包括选择配料、选择食谱，然后在给定的时间跟随步骤来完成。我们设计的功能模块将会通过这些行为来告知。功能模块，或者模块1 1. If we had to make a distinction between the two, I see functional patterns in a more generic way, as a kind of a Platonic ideal, and modules as the embodiment of functional patterns, which can be different in different interfaces. ↩ "},"process/":{"url":"process/","title":"过程","keywords":"","body":"What are the key qualities of a well-functioning, enduring design system? This question intrigued me so much I spent a huge amount of time researching and thinking about it. My research and thoughts provide the basis of this book. Drawing on the experience of companies of various sizes and approaches to design systems, I set out to identify what makes an effective system that can empower teams to create great digital products. Throughout the book I’ll share an approach that helps me every day with my work. I hope this will help with your work, too.” "},"conclusion/":{"url":"conclusion/","title":"总结","keywords":"","body":"test ksksks sdfa fals ajsdflk jdaflsk "}}